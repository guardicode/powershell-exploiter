import pydantic
import pytest
from powershell_exploiter.powershell_options import PowerShellOptions

TARGET_PORTS = [5985, 5986, 22, 443]
TRY_ALL_DISCOVERED_OPEN_PORTS = True
CONNECTION_TIMEOUT = 11.2


POWERSHELL_OPTIONS_DICT = {
    "target_ports": TARGET_PORTS,
    "try_all_discovered_open_ports": TRY_ALL_DISCOVERED_OPEN_PORTS,
    "winrm_connect_timeout": CONNECTION_TIMEOUT,
}


POWERSHELL_OPTIONS_OBJECT = PowerShellOptions(
    target_ports=TARGET_PORTS,
    try_all_discovered_open_ports=TRY_ALL_DISCOVERED_OPEN_PORTS,
    winrm_connect_timeout=CONNECTION_TIMEOUT,
)


TARGET_PORTS_EXCEPTION = {"target_ports": [-1, 70000]}
CONNECTION_TIMEOUT_EXCEPTION = {"winrm_connect_timeout": 0}


def test_powershell_options__serialization():
    assert POWERSHELL_OPTIONS_OBJECT.dict(simplify=True) == POWERSHELL_OPTIONS_DICT


def test_powershell_options__full_serialization():
    assert (
        PowerShellOptions(**POWERSHELL_OPTIONS_OBJECT.dict(simplify=True))
        == POWERSHELL_OPTIONS_OBJECT
    )


def test_powershell_options__deserialization():
    assert PowerShellOptions(**POWERSHELL_OPTIONS_DICT) == POWERSHELL_OPTIONS_OBJECT


def test_powershell_options__default():
    powershell_options = PowerShellOptions()

    assert powershell_options.target_ports == [5985, 5986]
    assert powershell_options.try_all_discovered_open_ports is False
    assert powershell_options.winrm_connect_timeout == 3.0


@pytest.mark.parametrize(
    "options_dict",
    [
        TARGET_PORTS_EXCEPTION,
        CONNECTION_TIMEOUT_EXCEPTION,
    ],
)
def test_powershell_options_constraints(options_dict):
    with pytest.raises((pydantic.errors.NumberNotGeError, pydantic.errors.NumberNotGtError)):
        PowerShellOptions(**options_dict)
